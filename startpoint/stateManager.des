INITIALIZER:
    
    from Tkinter import *
    from DWatchGUI import DWatchGUI
    from LowLevelGUI import LowLevelGUI
    from threading import Thread

    timeDisplayMode = True
    def updateTimeTask():
        print 'updateTimeTask!'
        t_end = time.time() + 100
        while time.time() < t_end:
            print 'Hello updateTimeTask! 1' + str(time.time())
            print timeDisplayMode
            print '1'
            #dWatchGUI.increaseTimeByOne()
            dWatchGUI.increaseTimeByOne()
            if timeDisplayMode:
                dWatchGUI.refreshTimeDisplay()
            time.sleep(1)
    
    def updateChronoTask():
        print 'updateChronoTask!'
        t_end = time.time() + 100
        while time.time() < t_end:
            print 'Hello updateChronoTask!' + str(time.time())
            dWatchGUI.increaseChronoByOne()
            dWatchGUI.refreshChronoDisplay()
            time.sleep(1)

    root = Tk()
    root.title("My watch")

    dWatchGUI = DWatchGUI(root, eventhandler)
    #lowLevelGUI = LowLevelGUI(root, eventhandler)

    eventhandler.start()

    #create a list of threads
    threads = []
    # thread 1: update display time
    updateTime = Thread(target=updateTimeTask)
    updateTime.setDaemon(True)
    updateTime.start()

    updateChrono = Thread(target=updateChronoTask)
    updateChrono.setDaemon(True)
    #updateChrono.start()

    #threads.append( updateTime )

    # thread 2: update chrono

    # thread 3: check alarm 

    #t_end = time.time() + 3
    #while time.time() < t_end:
    #    print 'Hello World!' + str(time.time())
    #    time.sleep(1)

    root.mainloop()

    

STATECHART:
    NormalTimeDisplay [DS]
    LightOn
    DisplayAlarmMode
    EditAlarmMode
    ChronoMode
    ChronoIncreasing
    TimeEditingMode

TRANSITION:
    S: NormalTimeDisplay
    N: LightOn
    E: lightOn
    O: print "NormalTimeDisplay -> LightOn"
       dWatchGUI.setIndiglo()
       
TRANSITION:
    S: LightOn
    N: NormalTimeDisplay
    E: lightOff
    O: print "NormalTimeDisplay -> LightOn"
       time.sleep(2)
       dWatchGUI.unsetIndiglo()

TRANSITION:
    S: NormalTimeDisplay
    N: DisplayAlarmMode
    E: setAlarm
    O: print "NormalTimeDisplay -> DisplayAlarmMode"
       dWatchGUI.refreshAlarmDisplay()

TRANSITION:
    S: DisplayAlarmMode
    N: NormalTimeDisplay
    E: onoff
    O: print "DisplayAlarm -> NormalTimeDisplay"
       dWatchGUI.refreshTimeDisplay()

TRANSITION:
    S: NormalTimeDisplay
    N: ChronoMode
    E: changeMode
    O: print "NormalTimeDisplay -> ChronoMode"
       timeDisplayMode = False
       dWatchGUI.refreshChronoDisplay()

TRANSITION:
    S: ChronoMode
    N: NormalTimeDisplay
    E: changeMode
    O: print "ChronoMode -> NormalTimeDisplay"
       timeDisplayMode = True
       dWatchGUI.refreshTimeDisplay()

TRANSITION:
    S: ChronoMode
    N: ChronoIncreasing
    E: editTime
    O: print "ChronoMode -> ChronoIncreasing"
       updateChrono.start()
          

TRANSITION:
    S: ChronoIncreasing
    N: ChronoMode
    E: finishEdit
    O: print "ChronoIncreasing -> ChronoMode"
       dWatchGUI.refreshChronoDisplay()

TRANSITION:
    S: NormalTimeDisplay
    N: TimeEditingMode
    E: editTime
    O: print "NormalTimeDisplay -> TimeEditingMode"
       time.sleep(1.5)
       #Stop time running???